/*********************************************************************************
 *                                                                               *
 * WARNING: File automatically generated by DMXmlJson. DON'T CHANGE IT manually! *
 *                                                                               *
 *********************************************************************************/

package it.sasabz.sasabus.opendata.client.model;


public class SASAbusOpenDataUnmarshaller_Helper extends bz.davide.dmxmljson.unmarshalling.Unmarshaller
{
   protected SASAbusOpenDataUnmarshaller_Helper()
   {
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusLineList", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusLineList>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusLineList  ret){
            // list
            if (ret.list != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusLineList.list");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusLineList", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusLineList ret = new it.sasabz.sasabus.opendata.client.model.BusLineList();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusLineList").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusLineList", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // list
            if ((value = structure.property("list")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusLineList)obj).list = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  it.sasabz.sasabus.opendata.client.model.BusLine[] arrayList = new it.sasabz.sasabus.opendata.client.model.BusLine[arr.length()];       
                  for (int i = 0; i < arrayList.length; i++) {                       
                     value = arr.nextItem();                                       
                     if (value.isNull())                                           
                        arrayList[i] = null;                                       
                     else                                                          
                     {                                                                   
                        bz.davide.dmxmljson.unmarshalling.Structure tmpStructure = value.structure();
                        String refid = tmpStructure.getRefId();    
                        if (refid != null)                              
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusLine)(identities.get(refid));                                                
                        else {
                           Object o = newInstance(tmpStructure.getRuntimeClassName("BusLine"));              
                           internalUnmarschall(tmpStructure, o.getClass().getName(), o, identities); 
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusLine)(o);                                                
                        }
                     }                                                                   
                  }                                                                   
                  arr.close();        
                  ((BusLineList)obj).list = arrayList;
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusStationList", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusStationList>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusStationList  ret){
            // list
            if (ret.list != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusStationList.list");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusStationList", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusStationList ret = new it.sasabz.sasabus.opendata.client.model.BusStationList();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusStationList").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusStationList", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // list
            if ((value = structure.property("list")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusStationList)obj).list = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  java.util.ArrayList arrayList = new java.util.ArrayList(arr.length());       
                  while ((value = arr.nextItem()) != null) {                       
                     if (value.isNull())                                           
                        arrayList.add(null);                                       
                     else                                                          
                     {                                                                   
                        bz.davide.dmxmljson.unmarshalling.Structure tmpStructure = value.structure();
                        String refid = tmpStructure.getRefId();    
                        if (refid != null)                              
                           arrayList.add(identities.get(refid));                                                
                        else {
                           Object o = newInstance(tmpStructure.getRuntimeClassName("BusStation"));              
                           internalUnmarschall(tmpStructure, o.getClass().getName(), o, identities); 
                           arrayList.add(o);                                                
                        }
                     }                                                                   
                  }                                                                   
                  arr.close();        
                  ((BusStationList)obj).list = arrayList;
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.StartDateList", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.StartDateList>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.StartDateList  ret){
            // list
            if (ret.list != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.StartDateList.list");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.StartDateList", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.StartDateList ret = new it.sasabz.sasabus.opendata.client.model.StartDateList();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.StartDateList").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.StartDateList", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // list
            if ((value = structure.property("list")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.StartDateList)obj).list = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  it.sasabz.sasabus.opendata.client.model.StartDate[] arrayList = new it.sasabz.sasabus.opendata.client.model.StartDate[arr.length()];       
                  for (int i = 0; i < arrayList.length; i++) {                       
                     value = arr.nextItem();                                       
                     if (value.isNull())                                           
                        arrayList[i] = null;                                       
                     else                                                          
                     {                                                                   
                        bz.davide.dmxmljson.unmarshalling.Structure tmpStructure = value.structure();
                        String refid = tmpStructure.getRefId();    
                        if (refid != null)                              
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.StartDate)(identities.get(refid));                                                
                        else {
                           Object o = newInstance(tmpStructure.getRuntimeClassName("StartDate"));              
                           internalUnmarschall(tmpStructure, o.getClass().getName(), o, identities); 
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.StartDate)(o);                                                
                        }
                     }                                                                   
                  }                                                                   
                  arr.close();        
                  ((StartDateList)obj).list = arrayList;
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusTripStartList", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusTripStartList>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusTripStartList  ret){
            // list
            if (ret.list != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusTripStartList.list");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusTripStartList", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusTripStartList ret = new it.sasabz.sasabus.opendata.client.model.BusTripStartList();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusTripStartList").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusTripStartList", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // list
            if ((value = structure.property("list")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusTripStartList)obj).list = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  it.sasabz.sasabus.opendata.client.model.BusTripStartLine[] arrayList = new it.sasabz.sasabus.opendata.client.model.BusTripStartLine[arr.length()];       
                  for (int i = 0; i < arrayList.length; i++) {                       
                     value = arr.nextItem();                                       
                     if (value.isNull())                                           
                        arrayList[i] = null;                                       
                     else                                                          
                     {                                                                   
                        bz.davide.dmxmljson.unmarshalling.Structure tmpStructure = value.structure();
                        String refid = tmpStructure.getRefId();    
                        if (refid != null)                              
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusTripStartLine)(identities.get(refid));                                                
                        else {
                           Object o = newInstance(tmpStructure.getRuntimeClassName("BusTripStartLine"));              
                           internalUnmarschall(tmpStructure, o.getClass().getName(), o, identities); 
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusTripStartLine)(o);                                                
                        }
                     }                                                                   
                  }                                                                   
                  arr.close();        
                  ((BusTripStartList)obj).list = arrayList;
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusDayTypeList", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusDayTypeList>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusDayTypeList  ret){
            // list
            if (ret.list != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusDayTypeList.list");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusDayTypeList", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusDayTypeList ret = new it.sasabz.sasabus.opendata.client.model.BusDayTypeList();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusDayTypeList").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusDayTypeList", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // list
            if ((value = structure.property("list")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusDayTypeList)obj).list = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  it.sasabz.sasabus.opendata.client.model.BusDayType[] arrayList = new it.sasabz.sasabus.opendata.client.model.BusDayType[arr.length()];       
                  for (int i = 0; i < arrayList.length; i++) {                       
                     value = arr.nextItem();                                       
                     if (value.isNull())                                           
                        arrayList[i] = null;                                       
                     else                                                          
                     {                                                                   
                        bz.davide.dmxmljson.unmarshalling.Structure tmpStructure = value.structure();
                        String refid = tmpStructure.getRefId();    
                        if (refid != null)                              
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusDayType)(identities.get(refid));                                                
                        else {
                           Object o = newInstance(tmpStructure.getRuntimeClassName("BusDayType"));              
                           internalUnmarschall(tmpStructure, o.getClass().getName(), o, identities); 
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusDayType)(o);                                                
                        }
                     }                                                                   
                  }                                                                   
                  arr.close();        
                  ((BusDayTypeList)obj).list = arrayList;
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusPathList", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusPathList>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusPathList  ret){
            // list
            if (ret.list != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusPathList.list");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusPathList", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusPathList ret = new it.sasabz.sasabus.opendata.client.model.BusPathList();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusPathList").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusPathList", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // list
            if ((value = structure.property("list")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusPathList)obj).list = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  it.sasabz.sasabus.opendata.client.model.BusPathLine[] arrayList = new it.sasabz.sasabus.opendata.client.model.BusPathLine[arr.length()];       
                  for (int i = 0; i < arrayList.length; i++) {                       
                     value = arr.nextItem();                                       
                     if (value.isNull())                                           
                        arrayList[i] = null;                                       
                     else                                                          
                     {                                                                   
                        bz.davide.dmxmljson.unmarshalling.Structure tmpStructure = value.structure();
                        String refid = tmpStructure.getRefId();    
                        if (refid != null)                              
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusPathLine)(identities.get(refid));                                                
                        else {
                           Object o = newInstance(tmpStructure.getRuntimeClassName("BusPathLine"));              
                           internalUnmarschall(tmpStructure, o.getClass().getName(), o, identities); 
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusPathLine)(o);                                                
                        }
                     }                                                                   
                  }                                                                   
                  arr.close();        
                  ((BusPathList)obj).list = arrayList;
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStopsList", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStopsList>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStopsList  ret){
            // list
            if (ret.list != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStopsList.list");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStopsList", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStopsList ret = new it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStopsList();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStopsList").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStopsList", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // list
            if ((value = structure.property("list")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStopsList)obj).list = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops[] arrayList = new it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops[arr.length()];       
                  for (int i = 0; i < arrayList.length; i++) {                       
                     value = arr.nextItem();                                       
                     if (value.isNull())                                           
                        arrayList[i] = null;                                       
                     else                                                          
                     {                                                                   
                        bz.davide.dmxmljson.unmarshalling.Structure tmpStructure = value.structure();
                        String refid = tmpStructure.getRefId();    
                        if (refid != null)                              
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops)(identities.get(refid));                                                
                        else {
                           Object o = newInstance(tmpStructure.getRuntimeClassName("BusStandardTimeBetweenStops"));              
                           internalUnmarschall(tmpStructure, o.getClass().getName(), o, identities); 
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops)(o);                                                
                        }
                     }                                                                   
                  }                                                                   
                  arr.close();        
                  ((BusStandardTimeBetweenStopsList)obj).list = arrayList;
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStopsList", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStopsList>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStopsList  ret){
            // list
            if (ret.list != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStopsList.list");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStopsList", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStopsList ret = new it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStopsList();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStopsList").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStopsList", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // list
            if ((value = structure.property("list")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStopsList)obj).list = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStops[] arrayList = new it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStops[arr.length()];       
                  for (int i = 0; i < arrayList.length; i++) {                       
                     value = arr.nextItem();                                       
                     if (value.isNull())                                           
                        arrayList[i] = null;                                       
                     else                                                          
                     {                                                                   
                        bz.davide.dmxmljson.unmarshalling.Structure tmpStructure = value.structure();
                        String refid = tmpStructure.getRefId();    
                        if (refid != null)                              
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStops)(identities.get(refid));                                                
                        else {
                           Object o = newInstance(tmpStructure.getRuntimeClassName("BusExceptionTimeBetweenStops"));              
                           internalUnmarschall(tmpStructure, o.getClass().getName(), o, identities); 
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStops)(o);                                                
                        }
                     }                                                                   
                  }                                                                   
                  arr.close();        
                  ((BusExceptionTimeBetweenStopsList)obj).list = arrayList;
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStopList", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStopList>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStopList  ret){
            // list
            if (ret.list != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStopList.list");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStopList", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStopList ret = new it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStopList();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStopList").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStopList", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // list
            if ((value = structure.property("list")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStopList)obj).list = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStop[] arrayList = new it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStop[arr.length()];       
                  for (int i = 0; i < arrayList.length; i++) {                       
                     value = arr.nextItem();                                       
                     if (value.isNull())                                           
                        arrayList[i] = null;                                       
                     else                                                          
                     {                                                                   
                        bz.davide.dmxmljson.unmarshalling.Structure tmpStructure = value.structure();
                        String refid = tmpStructure.getRefId();    
                        if (refid != null)                              
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStop)(identities.get(refid));                                                
                        else {
                           Object o = newInstance(tmpStructure.getRuntimeClassName("BusWaitTimeAtStop"));              
                           internalUnmarschall(tmpStructure, o.getClass().getName(), o, identities); 
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStop)(o);                                                
                        }
                     }                                                                   
                  }                                                                   
                  arr.close();        
                  ((BusWaitTimeAtStopList)obj).list = arrayList;
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStopList", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStopList>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStopList  ret){
            // list
            if (ret.list != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStopList.list");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStopList", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStopList ret = new it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStopList();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStopList").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStopList", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // list
            if ((value = structure.property("list")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStopList)obj).list = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStop[] arrayList = new it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStop[arr.length()];       
                  for (int i = 0; i < arrayList.length; i++) {                       
                     value = arr.nextItem();                                       
                     if (value.isNull())                                           
                        arrayList[i] = null;                                       
                     else                                                          
                     {                                                                   
                        bz.davide.dmxmljson.unmarshalling.Structure tmpStructure = value.structure();
                        String refid = tmpStructure.getRefId();    
                        if (refid != null)                              
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStop)(identities.get(refid));                                                
                        else {
                           Object o = newInstance(tmpStructure.getRuntimeClassName("BusDefaultWaitTimeAtStop"));              
                           internalUnmarschall(tmpStructure, o.getClass().getName(), o, identities); 
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStop)(o);                                                
                        }
                     }                                                                   
                  }                                                                   
                  arr.close();        
                  ((BusDefaultWaitTimeAtStopList)obj).list = arrayList;
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStopList", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStopList>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStopList  ret){
            // list
            if (ret.list != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStopList.list");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStopList", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStopList ret = new it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStopList();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStopList").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStopList", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // list
            if ((value = structure.property("list")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStopList)obj).list = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop[] arrayList = new it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop[arr.length()];       
                  for (int i = 0; i < arrayList.length; i++) {                       
                     value = arr.nextItem();                                       
                     if (value.isNull())                                           
                        arrayList[i] = null;                                       
                     else                                                          
                     {                                                                   
                        bz.davide.dmxmljson.unmarshalling.Structure tmpStructure = value.structure();
                        String refid = tmpStructure.getRefId();    
                        if (refid != null)                              
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop)(identities.get(refid));                                                
                        else {
                           Object o = newInstance(tmpStructure.getRuntimeClassName("BusLineWaitTimeAtStop"));              
                           internalUnmarschall(tmpStructure, o.getClass().getName(), o, identities); 
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop)(o);                                                
                        }
                     }                                                                   
                  }                                                                   
                  arr.close();        
                  ((BusLineWaitTimeAtStopList)obj).list = arrayList;
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.FavouriteList", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.FavouriteList>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.FavouriteList  ret){
            // list
            if (ret.list != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.FavouriteList.list");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.FavouriteList", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.FavouriteList ret = new it.sasabz.sasabus.opendata.client.model.FavouriteList();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.FavouriteList").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.FavouriteList", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // list
            if ((value = structure.property("list")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.FavouriteList)obj).list = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  it.sasabz.sasabus.opendata.client.model.Favourite[] arrayList = new it.sasabz.sasabus.opendata.client.model.Favourite[arr.length()];       
                  for (int i = 0; i < arrayList.length; i++) {                       
                     value = arr.nextItem();                                       
                     if (value.isNull())                                           
                        arrayList[i] = null;                                       
                     else                                                          
                     {                                                                   
                        bz.davide.dmxmljson.unmarshalling.Structure tmpStructure = value.structure();
                        String refid = tmpStructure.getRefId();    
                        if (refid != null)                              
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.Favourite)(identities.get(refid));                                                
                        else {
                           Object o = newInstance(tmpStructure.getRuntimeClassName("Favourite"));              
                           internalUnmarschall(tmpStructure, o.getClass().getName(), o, identities); 
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.Favourite)(o);                                                
                        }
                     }                                                                   
                  }                                                                   
                  arr.close();        
                  ((FavouriteList)obj).list = arrayList;
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusLine", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusLine>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusLine  ret){
            // LI_KUERZEL
            if (ret.LI_KUERZEL != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusLine.LI_KUERZEL");
            // LI_NR
            if (ret.LI_NR != 0)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusLine.LI_NR");
            // varlist
            if (ret.varlist != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusLine.varlist");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusLine", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusLine ret = new it.sasabz.sasabus.opendata.client.model.BusLine();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusLine").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusLine", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // LI_KUERZEL
            if ((value = structure.property("LI_KUERZEL")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusLine)obj).LI_KUERZEL = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusLine)obj).LI_KUERZEL = value.string();
               }
            // LI_NR
            if ((value = structure.property("LI_NR")) != null)
               if (value.isNull())
                  new RuntimeException("Impossibile value for primitive type");
               else
               {
                  ((BusLine)obj).LI_NR = (int)value.integer();
               }
            // varlist
            if ((value = structure.property("varlist")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusLine)obj).varlist = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  java.lang.Integer[] arrayList = new java.lang.Integer[arr.length()];       
                  for (int i = 0; i < arrayList.length; i++) {                       
                     value = arr.nextItem();                                       
                     if (value.isNull())                                           
                        arrayList[i] = null;                                       
                     else                                                          
                        arrayList[i] = ((int)value.integer());
                  }                                                                   
                  arr.close();        
                  ((BusLine)obj).varlist = arrayList;
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusStation", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusStation>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusStation  ret){
            // ORT_GEMEINDE
            if (ret.ORT_GEMEINDE != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusStation.ORT_GEMEINDE");
            // ORT_NAME
            if (ret.ORT_NAME != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusStation.ORT_NAME");
            // busLineIds
            if (ret.busLineIds != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusStation.busLineIds");
            // busstops
            if (ret.busstops != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusStation.busstops");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusStation", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusStation ret = new it.sasabz.sasabus.opendata.client.model.BusStation();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusStation").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusStation", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // ORT_GEMEINDE
            if ((value = structure.property("ORT_GEMEINDE")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusStation)obj).ORT_GEMEINDE = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusStation)obj).ORT_GEMEINDE = value.string();
               }
            // ORT_NAME
            if ((value = structure.property("ORT_NAME")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusStation)obj).ORT_NAME = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusStation)obj).ORT_NAME = value.string();
               }
            // busLineIds
            if ((value = structure.property("busLineIds")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusStation)obj).busLineIds = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  java.util.ArrayList arrayList = new java.util.ArrayList(arr.length());       
                  while ((value = arr.nextItem()) != null) {                       
                     if (value.isNull())                                           
                        arrayList.add(null);                                       
                     else                                                          
                        arrayList.add((int)value.integer());
                  }                                                                   
                  arr.close();        
                  ((BusStation)obj).busLineIds = arrayList;
               }
            // busstops
            if ((value = structure.property("busstops")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusStation)obj).busstops = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  java.util.ArrayList arrayList = new java.util.ArrayList(arr.length());       
                  while ((value = arr.nextItem()) != null) {                       
                     if (value.isNull())                                           
                        arrayList.add(null);                                       
                     else                                                          
                     {                                                                   
                        bz.davide.dmxmljson.unmarshalling.Structure tmpStructure = value.structure();
                        String refid = tmpStructure.getRefId();    
                        if (refid != null)                              
                           arrayList.add(identities.get(refid));                                                
                        else {
                           Object o = newInstance(tmpStructure.getRuntimeClassName("BusStop"));              
                           internalUnmarschall(tmpStructure, o.getClass().getName(), o, identities); 
                           arrayList.add(o);                                                
                        }
                     }                                                                   
                  }                                                                   
                  arr.close();        
                  ((BusStation)obj).busstops = arrayList;
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.StartDate", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.StartDate>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.StartDate  ret){
            // VER_GUELTIGKEIT
            if (ret.VER_GUELTIGKEIT != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.StartDate.VER_GUELTIGKEIT");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.StartDate", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.StartDate ret = new it.sasabz.sasabus.opendata.client.model.StartDate();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.StartDate").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.StartDate", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // VER_GUELTIGKEIT
            if ((value = structure.property("VER_GUELTIGKEIT")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.StartDate)obj).VER_GUELTIGKEIT = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.StartDate)obj).VER_GUELTIGKEIT = value.string();
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusTripStartLine", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusTripStartLine>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusTripStartLine  ret){
            // LI_NR
            if (ret.LI_NR != 0)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusTripStartLine.LI_NR");
            // tagesartlist
            if (ret.tagesartlist != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusTripStartLine.tagesartlist");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusTripStartLine", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusTripStartLine ret = new it.sasabz.sasabus.opendata.client.model.BusTripStartLine();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusTripStartLine").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusTripStartLine", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // LI_NR
            if ((value = structure.property("LI_NR")) != null)
               if (value.isNull())
                  new RuntimeException("Impossibile value for primitive type");
               else
               {
                  ((BusTripStartLine)obj).LI_NR = (int)value.integer();
               }
            // tagesartlist
            if ((value = structure.property("tagesartlist")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusTripStartLine)obj).tagesartlist = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  it.sasabz.sasabus.opendata.client.model.BusTripStartDayType[] arrayList = new it.sasabz.sasabus.opendata.client.model.BusTripStartDayType[arr.length()];       
                  for (int i = 0; i < arrayList.length; i++) {                       
                     value = arr.nextItem();                                       
                     if (value.isNull())                                           
                        arrayList[i] = null;                                       
                     else                                                          
                     {                                                                   
                        bz.davide.dmxmljson.unmarshalling.Structure tmpStructure = value.structure();
                        String refid = tmpStructure.getRefId();    
                        if (refid != null)                              
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusTripStartDayType)(identities.get(refid));                                                
                        else {
                           Object o = newInstance(tmpStructure.getRuntimeClassName("BusTripStartDayType"));              
                           internalUnmarschall(tmpStructure, o.getClass().getName(), o, identities); 
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusTripStartDayType)(o);                                                
                        }
                     }                                                                   
                  }                                                                   
                  arr.close();        
                  ((BusTripStartLine)obj).tagesartlist = arrayList;
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusDayType", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusDayType>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusDayType  ret){
            // BETRIEBSTAG
            if (ret.BETRIEBSTAG != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusDayType.BETRIEBSTAG");
            // TAGESART_NR
            if (ret.TAGESART_NR != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusDayType.TAGESART_NR");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusDayType", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusDayType ret = new it.sasabz.sasabus.opendata.client.model.BusDayType();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusDayType").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusDayType", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // BETRIEBSTAG
            if ((value = structure.property("BETRIEBSTAG")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusDayType)obj).BETRIEBSTAG = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusDayType)obj).BETRIEBSTAG = value.string();
               }
            // TAGESART_NR
            if ((value = structure.property("TAGESART_NR")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusDayType)obj).TAGESART_NR = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusDayType)obj).TAGESART_NR = value.string();
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusPathLine", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusPathLine>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusPathLine  ret){
            // LI_NR
            if (ret.LI_NR != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusPathLine.LI_NR");
            // varlist
            if (ret.varlist != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusPathLine.varlist");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusPathLine", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusPathLine ret = new it.sasabz.sasabus.opendata.client.model.BusPathLine();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusPathLine").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusPathLine", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // LI_NR
            if ((value = structure.property("LI_NR")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusPathLine)obj).LI_NR = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusPathLine)obj).LI_NR = value.string();
               }
            // varlist
            if ((value = structure.property("varlist")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusPathLine)obj).varlist = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  it.sasabz.sasabus.opendata.client.model.BusPathVariant[] arrayList = new it.sasabz.sasabus.opendata.client.model.BusPathVariant[arr.length()];       
                  for (int i = 0; i < arrayList.length; i++) {                       
                     value = arr.nextItem();                                       
                     if (value.isNull())                                           
                        arrayList[i] = null;                                       
                     else                                                          
                     {                                                                   
                        bz.davide.dmxmljson.unmarshalling.Structure tmpStructure = value.structure();
                        String refid = tmpStructure.getRefId();    
                        if (refid != null)                              
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusPathVariant)(identities.get(refid));                                                
                        else {
                           Object o = newInstance(tmpStructure.getRuntimeClassName("BusPathVariant"));              
                           internalUnmarschall(tmpStructure, o.getClass().getName(), o, identities); 
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusPathVariant)(o);                                                
                        }
                     }                                                                   
                  }                                                                   
                  arr.close();        
                  ((BusPathLine)obj).varlist = arrayList;
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops  ret){
            // FGR_NR
            if (ret.FGR_NR != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops.FGR_NR");
            // ORT_NR
            if (ret.ORT_NR != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops.ORT_NR");
            // SEL_FZT
            if (ret.SEL_FZT != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops.SEL_FZT");
            // SEL_ZIEL
            if (ret.SEL_ZIEL != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops.SEL_ZIEL");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops ret = new it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // FGR_NR
            if ((value = structure.property("FGR_NR")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops)obj).FGR_NR = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops)obj).FGR_NR = value.string();
               }
            // ORT_NR
            if ((value = structure.property("ORT_NR")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops)obj).ORT_NR = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops)obj).ORT_NR = value.string();
               }
            // SEL_FZT
            if ((value = structure.property("SEL_FZT")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops)obj).SEL_FZT = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops)obj).SEL_FZT = value.string();
               }
            // SEL_ZIEL
            if ((value = structure.property("SEL_ZIEL")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops)obj).SEL_ZIEL = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusStandardTimeBetweenStops)obj).SEL_ZIEL = value.string();
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStops", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStops>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStops  ret){
            // FRT_FID
            if (ret.FRT_FID != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStops.FRT_FID");
            // FRT_FZT_ZEIT
            if (ret.FRT_FZT_ZEIT != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStops.FRT_FZT_ZEIT");
            // ORT_NR
            if (ret.ORT_NR != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStops.ORT_NR");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStops", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStops ret = new it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStops();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStops").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStops", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // FRT_FID
            if ((value = structure.property("FRT_FID")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStops)obj).FRT_FID = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStops)obj).FRT_FID = value.string();
               }
            // FRT_FZT_ZEIT
            if ((value = structure.property("FRT_FZT_ZEIT")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStops)obj).FRT_FZT_ZEIT = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStops)obj).FRT_FZT_ZEIT = value.string();
               }
            // ORT_NR
            if ((value = structure.property("ORT_NR")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStops)obj).ORT_NR = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusExceptionTimeBetweenStops)obj).ORT_NR = value.string();
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStop", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStop>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStop  ret){
            // FRT_FID
            if (ret.FRT_FID != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStop.FRT_FID");
            // FRT_HZT_ZEIT
            if (ret.FRT_HZT_ZEIT != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStop.FRT_HZT_ZEIT");
            // ORT_NR
            if (ret.ORT_NR != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStop.ORT_NR");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStop", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStop ret = new it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStop();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStop").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStop", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // FRT_FID
            if ((value = structure.property("FRT_FID")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStop)obj).FRT_FID = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStop)obj).FRT_FID = value.string();
               }
            // FRT_HZT_ZEIT
            if ((value = structure.property("FRT_HZT_ZEIT")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStop)obj).FRT_HZT_ZEIT = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStop)obj).FRT_HZT_ZEIT = value.string();
               }
            // ORT_NR
            if ((value = structure.property("ORT_NR")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStop)obj).ORT_NR = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusWaitTimeAtStop)obj).ORT_NR = value.string();
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStop", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStop>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStop  ret){
            // FGR_NR
            if (ret.FGR_NR != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStop.FGR_NR");
            // HP_HZT
            if (ret.HP_HZT != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStop.HP_HZT");
            // ORT_NR
            if (ret.ORT_NR != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStop.ORT_NR");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStop", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStop ret = new it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStop();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStop").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStop", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // FGR_NR
            if ((value = structure.property("FGR_NR")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStop)obj).FGR_NR = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStop)obj).FGR_NR = value.string();
               }
            // HP_HZT
            if ((value = structure.property("HP_HZT")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStop)obj).HP_HZT = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStop)obj).HP_HZT = value.string();
               }
            // ORT_NR
            if ((value = structure.property("ORT_NR")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStop)obj).ORT_NR = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusDefaultWaitTimeAtStop)obj).ORT_NR = value.string();
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop  ret){
            // FGR_NR
            if (ret.FGR_NR != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop.FGR_NR");
            // LIVAR_HZT_ZEIT
            if (ret.LIVAR_HZT_ZEIT != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop.LIVAR_HZT_ZEIT");
            // LI_LFD_NR
            if (ret.LI_LFD_NR != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop.LI_LFD_NR");
            // LI_NR
            if (ret.LI_NR != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop.LI_NR");
            // ORT_NR
            if (ret.ORT_NR != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop.ORT_NR");
            // STR_LI_VAR
            if (ret.STR_LI_VAR != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop.STR_LI_VAR");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop ret = new it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // FGR_NR
            if ((value = structure.property("FGR_NR")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop)obj).FGR_NR = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop)obj).FGR_NR = value.string();
               }
            // LIVAR_HZT_ZEIT
            if ((value = structure.property("LIVAR_HZT_ZEIT")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop)obj).LIVAR_HZT_ZEIT = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop)obj).LIVAR_HZT_ZEIT = value.string();
               }
            // LI_LFD_NR
            if ((value = structure.property("LI_LFD_NR")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop)obj).LI_LFD_NR = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop)obj).LI_LFD_NR = value.string();
               }
            // LI_NR
            if ((value = structure.property("LI_NR")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop)obj).LI_NR = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop)obj).LI_NR = value.string();
               }
            // ORT_NR
            if ((value = structure.property("ORT_NR")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop)obj).ORT_NR = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop)obj).ORT_NR = value.string();
               }
            // STR_LI_VAR
            if ((value = structure.property("STR_LI_VAR")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop)obj).STR_LI_VAR = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.BusLineWaitTimeAtStop)obj).STR_LI_VAR = value.string();
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.Favourite", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.Favourite>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.Favourite  ret){
            // name
            if (ret.name != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.Favourite.name");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.Favourite", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.Favourite ret = new it.sasabz.sasabus.opendata.client.model.Favourite();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.Favourite").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.Favourite", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // name
            if ((value = structure.property("name")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.Favourite)obj).name = null;
               else
               {
                  ((it.sasabz.sasabus.opendata.client.model.Favourite)obj).name = value.string();
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusStop", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusStop>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusStop  ret){
            // ORT_NR
            if (ret.ORT_NR != 0)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusStop.ORT_NR");
            // ORT_POS_BREITE
            if (ret.ORT_POS_BREITE != 0)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusStop.ORT_POS_BREITE");
            // ORT_POS_LAENGE
            if (ret.ORT_POS_LAENGE != 0)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusStop.ORT_POS_LAENGE");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusStop", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusStop ret = new it.sasabz.sasabus.opendata.client.model.BusStop();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusStop").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusStop", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // ORT_NR
            if ((value = structure.property("ORT_NR")) != null)
               if (value.isNull())
                  new RuntimeException("Impossibile value for primitive type");
               else
               {
                  ((BusStop)obj).ORT_NR = (int)value.integer();
               }
            // ORT_POS_BREITE
            if ((value = structure.property("ORT_POS_BREITE")) != null)
               if (value.isNull())
                  new RuntimeException("Impossibile value for primitive type");
               else
               {
                  ((BusStop)obj).ORT_POS_BREITE = value.decimal();
               }
            // ORT_POS_LAENGE
            if ((value = structure.property("ORT_POS_LAENGE")) != null)
               if (value.isNull())
                  new RuntimeException("Impossibile value for primitive type");
               else
               {
                  ((BusStop)obj).ORT_POS_LAENGE = value.decimal();
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusTripStartDayType", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusTripStartDayType>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusTripStartDayType  ret){
            // TAGESART_NR
            if (ret.TAGESART_NR != 0)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusTripStartDayType.TAGESART_NR");
            // varlist
            if (ret.varlist != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusTripStartDayType.varlist");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusTripStartDayType", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusTripStartDayType ret = new it.sasabz.sasabus.opendata.client.model.BusTripStartDayType();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusTripStartDayType").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusTripStartDayType", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // TAGESART_NR
            if ((value = structure.property("TAGESART_NR")) != null)
               if (value.isNull())
                  new RuntimeException("Impossibile value for primitive type");
               else
               {
                  ((BusTripStartDayType)obj).TAGESART_NR = (int)value.integer();
               }
            // varlist
            if ((value = structure.property("varlist")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusTripStartDayType)obj).varlist = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  it.sasabz.sasabus.opendata.client.model.BusTripStartVariant[] arrayList = new it.sasabz.sasabus.opendata.client.model.BusTripStartVariant[arr.length()];       
                  for (int i = 0; i < arrayList.length; i++) {                       
                     value = arr.nextItem();                                       
                     if (value.isNull())                                           
                        arrayList[i] = null;                                       
                     else                                                          
                     {                                                                   
                        bz.davide.dmxmljson.unmarshalling.Structure tmpStructure = value.structure();
                        String refid = tmpStructure.getRefId();    
                        if (refid != null)                              
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusTripStartVariant)(identities.get(refid));                                                
                        else {
                           Object o = newInstance(tmpStructure.getRuntimeClassName("BusTripStartVariant"));              
                           internalUnmarschall(tmpStructure, o.getClass().getName(), o, identities); 
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusTripStartVariant)(o);                                                
                        }
                     }                                                                   
                  }                                                                   
                  arr.close();        
                  ((BusTripStartDayType)obj).varlist = arrayList;
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusPathVariant", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusPathVariant>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusPathVariant  ret){
            // STR_LI_VAR
            if (ret.STR_LI_VAR != 0)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusPathVariant.STR_LI_VAR");
            // routelist
            if (ret.routelist != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusPathVariant.routelist");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusPathVariant", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusPathVariant ret = new it.sasabz.sasabus.opendata.client.model.BusPathVariant();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusPathVariant").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusPathVariant", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // STR_LI_VAR
            if ((value = structure.property("STR_LI_VAR")) != null)
               if (value.isNull())
                  new RuntimeException("Impossibile value for primitive type");
               else
               {
                  ((BusPathVariant)obj).STR_LI_VAR = (int)value.integer();
               }
            // routelist
            if ((value = structure.property("routelist")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusPathVariant)obj).routelist = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  java.lang.Integer[] arrayList = new java.lang.Integer[arr.length()];       
                  for (int i = 0; i < arrayList.length; i++) {                       
                     value = arr.nextItem();                                       
                     if (value.isNull())                                           
                        arrayList[i] = null;                                       
                     else                                                          
                        arrayList[i] = ((int)value.integer());
                  }                                                                   
                  arr.close();        
                  ((BusPathVariant)obj).routelist = arrayList;
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusTripStartVariant", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusTripStartVariant>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusTripStartVariant  ret){
            // STR_LI_VAR
            if (ret.STR_LI_VAR != 0)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusTripStartVariant.STR_LI_VAR");
            // triplist
            if (ret.triplist != null)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusTripStartVariant.triplist");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusTripStartVariant", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusTripStartVariant ret = new it.sasabz.sasabus.opendata.client.model.BusTripStartVariant();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusTripStartVariant").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusTripStartVariant", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // STR_LI_VAR
            if ((value = structure.property("STR_LI_VAR")) != null)
               if (value.isNull())
                  new RuntimeException("Impossibile value for primitive type");
               else
               {
                  ((BusTripStartVariant)obj).STR_LI_VAR = (int)value.integer();
               }
            // triplist
            if ((value = structure.property("triplist")) != null)
               if (value.isNull())
                  ((it.sasabz.sasabus.opendata.client.model.BusTripStartVariant)obj).triplist = null;
               else
               {
                  bz.davide.dmxmljson.unmarshalling.Array arr = value.array();        
                  arr.open();        
                  it.sasabz.sasabus.opendata.client.model.BusTripStartTime[] arrayList = new it.sasabz.sasabus.opendata.client.model.BusTripStartTime[arr.length()];       
                  for (int i = 0; i < arrayList.length; i++) {                       
                     value = arr.nextItem();                                       
                     if (value.isNull())                                           
                        arrayList[i] = null;                                       
                     else                                                          
                     {                                                                   
                        bz.davide.dmxmljson.unmarshalling.Structure tmpStructure = value.structure();
                        String refid = tmpStructure.getRefId();    
                        if (refid != null)                              
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusTripStartTime)(identities.get(refid));                                                
                        else {
                           Object o = newInstance(tmpStructure.getRuntimeClassName("BusTripStartTime"));              
                           internalUnmarschall(tmpStructure, o.getClass().getName(), o, identities); 
                           arrayList[i] = (it.sasabz.sasabus.opendata.client.model.BusTripStartTime)(o);                                                
                        }
                     }                                                                   
                  }                                                                   
                  arr.close();        
                  ((BusTripStartVariant)obj).triplist = arrayList;
               }
            structure.close();
         }
      });
      this.emptyObjectCheck.put("it.sasabz.sasabus.opendata.client.model.BusTripStartTime", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<it.sasabz.sasabus.opendata.client.model.BusTripStartTime>() {
         @Override public void check(it.sasabz.sasabus.opendata.client.model.BusTripStartTime  ret){
            // FGR_NR
            if (ret.FGR_NR != 0)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusTripStartTime.FGR_NR");
            // FRT_FID
            if (ret.FRT_FID != 0)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusTripStartTime.FRT_FID");
            // FRT_START
            if (ret.FRT_START != 0)
               throw new RuntimeException("The constructor initialized the field it.sasabz.sasabus.opendata.client.model.BusTripStartTime.FRT_START");
         }
      });
      this.putInstanceFactory("it.sasabz.sasabus.opendata.client.model.BusTripStartTime", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            it.sasabz.sasabus.opendata.client.model.BusTripStartTime ret = new it.sasabz.sasabus.opendata.client.model.BusTripStartTime();
            emptyObjectCheck.get("it.sasabz.sasabus.opendata.client.model.BusTripStartTime").check(ret);
            return ret;
         }
      });

      this.putClassUnmarshaller("it.sasabz.sasabus.opendata.client.model.BusTripStartTime", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            // FGR_NR
            if ((value = structure.property("FGR_NR")) != null)
               if (value.isNull())
                  new RuntimeException("Impossibile value for primitive type");
               else
               {
                  ((BusTripStartTime)obj).FGR_NR = (int)value.integer();
               }
            // FRT_FID
            if ((value = structure.property("FRT_FID")) != null)
               if (value.isNull())
                  new RuntimeException("Impossibile value for primitive type");
               else
               {
                  ((BusTripStartTime)obj).FRT_FID = (int)value.integer();
               }
            // FRT_START
            if ((value = structure.property("FRT_START")) != null)
               if (value.isNull())
                  new RuntimeException("Impossibile value for primitive type");
               else
               {
                  ((BusTripStartTime)obj).FRT_START = (int)value.integer();
               }
            structure.close();
         }
      });

   }
}
